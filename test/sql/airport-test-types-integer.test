# name: test/sql/airport-test-types-integer.test
# description: test airport with all data types
# group: [airport]

# Require statement will ensure this test is run with this extension loaded
require airport

# Require test server URL
require-env AIRPORT_TEST_SERVER

# Create the initial secret, the token value doesn't matter.
statement ok
CREATE SECRET airport_testing (
  type airport,
  auth_token uuid(),
  scope '${AIRPORT_TEST_SERVER}');

# Reset the test server
statement ok
CALL airport_action('${AIRPORT_TEST_SERVER}', 'reset');

# Create the initial database
statement ok
CALL airport_action('${AIRPORT_TEST_SERVER}', 'create_database', 'test1');

statement ok
ATTACH 'test1' (TYPE  AIRPORT, location '${AIRPORT_TEST_SERVER}');


statement ok
CREATE SCHEMA test1.test_non_predicate;

statement ok
use test1.test_non_predicate;

statement ok
create table test_type_integer (v integer);

statement ok
insert into test_type_integer values (null);

statement ok
insert into test_type_integer values (123456);


query I
select * from test_type_integer order by 1
----
123456
NULL

query I
select v from test_type_integer where v = 123456;
----
123456


statement ok
CREATE SCHEMA test1.test_predicate_pushdown;

statement ok
use test1.test_predicate_pushdown;

statement ok
create table test_type_integer (v integer);

statement ok
insert into test_type_integer values (null);

statement ok
insert into test_type_integer values (123456);


query I
select * from test_type_integer order by 1
----
123456
NULL

query I
select v from test_type_integer where v = 123456;
----
123456

# Reset the test server
    statement ok
    CALL airport_action('${AIRPORT_TEST_SERVER}', 'reset');

