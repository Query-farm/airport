# name: test/sql/airport-test-types-dec.test
# description: test airport with all data types
# group: [airport]

# Require statement will ensure this test is run with this extension loaded
require airport

# Require test server URL
require-env AIRPORT_TEST_SERVER

# Create the initial secret, the token value doesn't matter.
statement ok
CREATE SECRET airport_testing (
  type airport,
  auth_token uuid(),
  scope '${AIRPORT_TEST_SERVER}');

# Reset the test server
statement ok
CALL airport_action('${AIRPORT_TEST_SERVER}', 'reset');

# Create the initial database
statement ok
CALL airport_action('${AIRPORT_TEST_SERVER}', 'create_database', 'test1');

statement ok
ATTACH 'test1' (TYPE  AIRPORT, location '${AIRPORT_TEST_SERVER}');


statement ok
CREATE SCHEMA test1.test_non_predicate;

statement ok
use test1.test_non_predicate;

statement ok
create table test_type_dec (v dec);

statement ok
insert into test_type_dec values (null);

statement ok
insert into test_type_dec values (123.45);


query R
select * from test_type_dec order by 1
----
123.45
NULL

query R
select v from test_type_dec where v = 123.45;
----
123.45


statement ok
CREATE SCHEMA test1.test_predicate_pushdown;

statement ok
use test1.test_predicate_pushdown;

statement ok
create table test_type_dec (v dec);

statement ok
insert into test_type_dec values (null);

statement ok
insert into test_type_dec values (123.45);


query R
select * from test_type_dec order by 1
----
123.45
NULL

query R
select v from test_type_dec where v = 123.45;
----
123.45

# Reset the test server
    statement ok
    CALL airport_action('${AIRPORT_TEST_SERVER}', 'reset');

