# name: test/sql/airport-test-types-datetime.test
# description: test airport with all data types
# group: [airport]

# Require statement will ensure this test is run with this extension loaded
require airport

# Create the initial secret, the token value doesn't matter.
statement ok
CREATE SECRET airport_testing (
  type airport,
  auth_token uuid(),
  scope 'grpc+tls://airport-ci.query.farm/');

# Reset the test server
statement ok
CALL airport_action('grpc+tls://airport-ci.query.farm/', 'reset');

# Create the initial database
statement ok
CALL airport_action('grpc+tls://airport-ci.query.farm/', 'create_database', 'test1');

statement ok
ATTACH 'test1' (TYPE  AIRPORT, location 'grpc+tls://airport-ci.query.farm/');


statement ok
CREATE SCHEMA test1.test_non_predicate;

statement ok
use test1.test_non_predicate;

statement ok
create table test_type_datetime (v datetime);

statement ok
insert into test_type_datetime values (null);

statement ok
insert into test_type_datetime values ('2023-10-01 12:00:00');


query T
select * from test_type_datetime order by 1
----
2023-10-01 12:00:00
NULL

query T
select v from test_type_datetime where v = '2023-10-01 12:00:00';
----
2023-10-01 12:00:00


statement ok
CREATE SCHEMA test1.test_predicate_pushdown;

statement ok
use test1.test_predicate_pushdown;

statement ok
create table test_type_datetime (v datetime);

statement ok
insert into test_type_datetime values (null);

statement ok
insert into test_type_datetime values ('2023-10-01 12:00:00');


query T
select * from test_type_datetime order by 1
----
2023-10-01 12:00:00
NULL

query T
select v from test_type_datetime where v = '2023-10-01 12:00:00';
----
2023-10-01 12:00:00

# Reset the test server
    statement ok
    CALL airport_action('grpc+tls://airport-ci.query.farm/', 'reset');
    
